{"version":3,"sources":["logo.svg","context.js","home.js","utils.js","login.js","deposit.js","withdraw.js","balance.js","alldata.js","navbar.js","createaccount.js","App.js","reportWebVitals.js","index.js"],"names":["Route","Route_","Link","Link_","HashRouter","HashRouter_","UserContext","createContext","status","setContext","Card","props","className","bgcolor","txtcolor","style","maxWidth","header","title","text","body","id","Home","src","alt","getUserObject","name","user_list","filter","user","email","uuid","replace","c","r","Math","random","toString","Login","useState","show","setUser","password","setPassword","useContext","type","placeholder","value","onChange","e","currentTarget","onClick","find","console","log","canLogin","users","alert","current_user","Deposit","setShow","amount","setAmount","balance","setBalance","useEffect","undefined","parseInt","parseFloat","newBalance","newUsers","map","Withdraw","show_overdraft","setShowOverdraft","Balance","ctx","JSON","stringify","AllData","ListItem","item","callback","active","to","address","NavBar","links","setLinks","newState","link","target","innerHTML","CreateAccount","show_required_email","setShowRequiredEmail","show_required_name","setShowRequiredName","show_required_password","setShowRequiredPassword","setName","setEmail","validateInputs","pwd","a","test","validateEmail","b","validateName","validatePwd","user_name","emailExists","new_user","new_user_list","push","Spa","Provider","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c30a632.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Route as Route_, Link as Link_, HashRouter as HashRouter_} from 'react-router-dom'\nimport { createContext } from \"react\";\nexport const Route = Route_;\nexport const Link = Link_;\nexport const HashRouter = HashRouter_;\nexport const UserContext = createContext({\n  status: {},\n  setContext: () => {},\n});\n\nconst Card = (props) => {\n  const classes = () => {\n    const bg = props.bgcolor ? \"bg-\" + props.bgcolor : \" \";\n    const txt = props.txtcolor ? \"text-\" + props.txtcolor : \" \";\n    return \"card mb-3 \" + bg + txt;\n  };\n  return (\n    <div className={classes()} style={{ maxWidth: \"18rem\" }}>\n      <div className=\"card\">\n        <h5 className=\"card-header bg-primary text-light\">{props.header}</h5>\n        <div className=\"card-body\">\n          {props.title && <h5 className=\"card-title\">{props.title}</h5>}\n          {props.text && <p className=\"card-text\">{props.text}</p>}\n          {props.body}\n          {props.status && <div id=\"createStatus\">{props.status}</div>}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Card;\n","import Card from \"./context\";\nconst Home = () => {\n  return (\n    <Card\n      txtcolor=\"black\"\n      header=\"BadBank Home\"\n      title=\"Welcome to the Bad Bank\"\n      text=\"You can use this bank, no problem\"\n      body={\n        <img src=\"./img/bank.png\" className=\"img-fluid\" alt=\"Responsibe image\" />\n      }\n    />\n  );\n};\nexport default Home;\n","export const  userExists = (user_name, user_list) =>{\n    return (user_list.find(user => user.name === user_name))\n }\n\n export const  emailExists = (email, user_list) => {\n     return (user_list.find(user => user.email === email ))\n }\n export const  validateEmail = (email) => {\n   if (\n     /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n       email\n     )\n   ) {\n     return true;\n   }\n   return false;\n };\n export const  validateName = (name) => {\n   if (name !== \"\") {\n     return true;\n   } else {\n     return false;\n   }\n };\n\n export const  validatePwd = (pwd) => {\n   if (pwd !== \"\") {\n     return true;\n   } else {\n     return false;\n   }\n }\n\n export const  canLogin = (name, password, user_list) => {\n    return user_list.find(user => {\n        console.log(user);\n        return(user.name === name || user.email === name) && user.password === password})\n }\n\n export const  getUserObject = (name, user_list) =>{\n     return user_list.filter(user => (user.name === name || user.email === name))[0]\n }\n\n export const  uuid = () => {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n      var r = (Math.random() * 16) | 0,\n        v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n  ","import { useState, useContext } from \"react\";\nimport { UserContext } from \"./context\";\nimport Card from \"./context\";\nimport {canLogin, getUserObject} from './utils'\nconst Login = () => {\n  const [show, setShow] = useState(true);\n  const [user, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { status, setContext } = useContext(UserContext);\n  const handleLogin = () => {\n    if (!canLogin(user, password, status.users)) {\n      alert(\"Cannot login this user/password combination...\");\n      setUser(\"\");\n      setPassword(\"\");\n      return;\n    }\n    setContext({\n      users: status.users,\n      current_user: getUserObject(user, status.users),\n    });\n    // redirect to home??\n  };\n  return (\n    <Card\n      bgcolor=\"primary\"\n      header=\"Login\"\n      status={\"\"}\n      body={\n        show ? (\n          <>\n            User or email:\n            <br />\n            <input\n              type=\"input\"\n              className=\"form-control\"\n              id=\"user\"\n              placeholder=\"Enter user or email\"\n              value={user}\n              onChange={(e) => setUser(e.currentTarget.value)}\n            />\n            <br />\n            Password:\n            <br />\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.currentTarget.value)}\n            />\n            <br />\n            <button type=\"submit\" className=\"btn-primary\" onClick={handleLogin}>\n              Login\n            </button>\n          </>\n        ) : (\n          <></>\n        )\n      }\n    ></Card>\n  );\n};\nexport default Login;\n","import { useState, useContext, useEffect } from \"react\"\nimport { UserContext } from \"./context\";\nimport Card from \"./context\";\nimport {getUserObject} from \"./utils\"\n\nconst Deposit = () => {\n  const [show, setShow] = useState(false);\n  const [amount, setAmount] = useState(0.0);\n  const [balance, setBalance] = useState(0.0);\n  const { status, setContext } = useContext(UserContext);\n  useEffect(() => {\n    console.log(\"Rendering ...\", status);\n    console.log(\n      \"Current user balance:\",\n      status.current_user !== undefined\n        ? status.current_user.balance\n        : \"Not defined\"\n    );\n    setShow(status.current_user !== undefined);\n    setBalance(\n      status.current_user !== undefined ? status.current_user.balance : null\n    );\n  },[status]);\n  const handleDeposit = () => {\n    console.log(\"amount: \", amount);\n    console.log(\"amount as float: \", parseInt(amount));\n    console.log(\"user object: \", status.current_user);\n    console.log(\n      \"user object balance as float: \",\n      parseFloat(status.current_user.balance),\n      typeof status.current_user.balance\n    );\n\n    let newBalance =\n      parseFloat(status.current_user.balance) + parseFloat(amount);\n    console.log(\"new balance: \", newBalance);\n    setAmount(0.0);\n    setBalance(newBalance);\n\n    let newUsers = status.users.map((user) => {\n      if (user.name === status.current_user.name) {\n        user.balance = newBalance;\n      }\n      return user;\n    });\n\n    console.log(newUsers);\n    setContext({\n      users: newUsers,\n      current_user: getUserObject(status.current_user.name, newUsers),\n    });\n    console.log(status);\n  };\n  return (\n    <Card\n      bgcolor=\"primary\"\n      header=\"Deposit\"\n      status={\"\"}\n      body={\n        show ? (\n          <>\n            Balance :$\n            {balance}\n            <br />\n            Deposit Amount:\n            <input\n              type=\"input\"\n              className=\"form-control\"\n              id=\"amount\"\n              placeholder=\"Amount to deposit\"\n              value={amount}\n              onChange={(e) => setAmount(e.currentTarget.value)}\n            />\n            <br />\n            <button\n              type=\"submit\"\n              className=\"btn-primary\"\n              onClick={handleDeposit}\n            >\n              Deposit\n            </button>\n          </>\n        ) : (\n          <>\n            <h3>Must login to show this page</h3>\n          </>\n        )\n      }\n    ></Card>\n  );\n};\nexport default Deposit;\n","import { useState, useContext, useEffect } from \"react\"\nimport { UserContext } from \"./context\";\nimport Card from \"./context\";\nimport {getUserObject} from \"./utils\"\n\nconst Withdraw = () => {\n  const [show, setShow] = useState(false);\n  const [show_overdraft, setShowOverdraft] = useState(false)\n  const [amount, setAmount] = useState(0.0);\n  const [balance, setBalance] = useState(0.0);\n  const { status, setContext } = useContext(UserContext);\n  useEffect(() => {\n    console.log(\"Rendering ...\", status);\n    console.log(\n      \"Current user balance:\",\n      status.current_user !== undefined\n        ? status.current_user.balance\n        : \"Not defined\"\n    );\n    setShow(status.current_user !== undefined);\n    setBalance(\n      status.current_user !== undefined ? status.current_user.balance : null\n    );\n  },[status]);\n  const handleWithdraw = () => {\n    console.log(\"amount: \", amount);\n    console.log(\"amount as float: \", parseInt(amount));\n    console.log(\"user object: \", status.current_user);\n    console.log(\n      \"user object balance as float: \",\n      parseFloat(status.current_user.balance),\n      typeof status.current_user.balance\n    );\n\n    let newBalance =\n      parseFloat(status.current_user.balance) - parseFloat(amount);\n    if(newBalance<0){\n        setShowOverdraft(true)\n        return\n    }\n    console.log(\"new balance: \", newBalance);\n    setAmount(0.0);\n    setBalance(newBalance);\n\n    let newUsers = status.users.map((user) => {\n      if (user.name === status.current_user.name) {\n        user.balance = newBalance;\n      }\n      return user;\n    });\n\n    console.log(newUsers);\n    setContext({\n      users: newUsers,\n      current_user: getUserObject(status.current_user.name, newUsers),\n    });\n    console.log(status);\n    setShowOverdraft(false)\n  };\n  return (\n    <Card\n      bgcolor=\"primary\"\n      header=\"Withdraw\"\n      status={\"\"}\n      body={\n        show ? (\n          <>\n            Balance :$\n            {balance}\n            <br />\n            Withdraw Amount:\n            <input\n              type=\"input\"\n              className=\"form-control\"\n              id=\"amount\"\n              placeholder=\"Amount to withdraw\"\n              value={amount}\n              onChange={(e) => setAmount(e.currentTarget.value)}\n            />\n            <br />\n            <button\n              type=\"submit\"\n              className=\"btn-primary\"\n              onClick={handleWithdraw}\n            >\n              Withdraw\n            </button>\n            {show_overdraft ? <div className=\"text-danger\">*The amount ${amount} cannot be withdrawn</div>: <></>}\n          </>\n        ) : (\n          <>\n            <h3>Must login to show this page</h3>\n          </>\n        )\n      }\n    ></Card>\n  );\n};\nexport default Withdraw","import { useContext } from \"react\";\nimport { UserContext } from \"./context\";\nconst Balance = () => {\n  const ctx = useContext(UserContext);\n  return (\n    <>\n      <h3>Balance</h3>\n      {JSON.stringify(ctx.users)}\n    </>\n  );\n};\nexport default Balance;\n","import {useContext } from \"react\";\nimport { UserContext } from \"./context\";\nimport Card from \"./context\";\n\nconst AllData = () => {\n  const { status, } = useContext(UserContext);\n  return (\n    <>\n      {status.users.map((user) => {\n        return (\n          <Card\n            bgcolor=\"primary\"\n            header={user.name}\n            status=\"\"\n            body={\n              <>\n                email:{user.email}\n                <br />\n                password:{user.password}\n              </>\n            }\n          ></Card>\n        );\n      })}\n    </>\n  );\n};\nexport default AllData;\n","import { useState } from 'react';\nimport {uuid} from './utils'\nimport {Link} from './context'\n\nconst NavBar = () => {\n  const [links, setLinks] = useState([\n    { text: \"BadBank\", address: \"/\", active: false },\n    { text: \"Create Account\", address: \"/createaccount/\", active: false },\n    { text: \"Login\", address: \"/login/\", active: false },\n    { text: \"Deposit\", address: \"/deposit/\", active: false },\n    { text: \"Withdraw\", address: \"/withdraw/\", active: false },\n    { text: \"Balance\", address: \"/balance/\", active: false },\n    { text: \"All Data\", address: \"/alldata/\", active: false },\n  ]);\n  const onClick = (e) => {\n    let newState = links.map((link) => {\n      if (link.text === e.target.innerHTML) {\n        link.active = true;\n      } else {\n        link.active = false;\n      }\n      return link;\n    });\n    setLinks(newState);\n  };\n  return (\n    <ul className=\"bg-dark text-ligth nav\">\n      {links.map((item) => (\n        <ListItem key={uuid()} item={item} callback={onClick} />\n      ))}\n    </ul>\n  );\n};\n\nconst ListItem = ({ item, callback }) => {\n  return (\n    <li key={uuid()} className=\"nav-item\">\n      <Link\n        key={uuid()}\n        className={item.active ? \"navlink-active nav-link\" : \"navlink nav-link\"}\n        to={item.address}\n        onClick={callback}\n      >\n        {item.text}\n      </Link>\n    </li>\n  );\n};\n\nexport default NavBar;\n","import { useState, useContext } from \"react\";\nimport { UserContext } from \"./context\";\nimport {\n  userExists,\n  emailExists,\n  validateEmail,\n  validateName,\n  validatePwd,\n} from \"./utils\";\nimport Card from \"./context\";\n\nconst CreateAccount = () => {\n  const [show, setShow] = useState(true);\n  const [show_required_email, setShowRequiredEmail] = useState(true);\n  const [show_required_name, setShowRequiredName] = useState(true);\n  const [show_required_password, setShowRequiredPassword] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { status, setContext } = useContext(UserContext);\n  const clearForm = () => {\n    setName(\"\");\n    setShowRequiredName(true);\n    setEmail(\"\");\n    setShowRequiredEmail(true);\n    setPassword(\"\");\n    setShowRequiredPassword(true);\n    setShow(true);\n  };\n  const handleCreate = () => {\n    console.log(status);\n    if (userExists(name, status.users)) {\n      alert(`${name} already exists...`);\n      return;\n    }\n    if (emailExists(email, status.users)) {\n      alert(`${email} already exists....`);\n      return;\n    }\n    if (validateInputs(name, email, password)) {\n      let new_user = {\n        name: name,\n        email: email,\n        password: password,\n        balance: 0,\n      };\n      let new_user_list = [...status.users];\n      new_user_list.push(new_user);\n      setContext({ users: new_user_list, current_user: undefined });\n      setShow(false);\n      console.log(status);\n    }\n  };\n  const validateInputs = (name, email, pwd) => {\n    let a = validateEmail(email);\n    setShowRequiredEmail(a);\n    let b = validateName(name);\n    setShowRequiredName(b);\n    let c = validatePwd(pwd);\n    setShowRequiredPassword(c);\n    return a && b && c;\n  };\n  return (\n    <Card\n      bgcolor=\"primary\"\n      header=\"Create Account\"\n      status={\"\"}\n      body={\n        show ? (\n          <>\n            Name\n            <br />\n            <input\n              type=\"input\"\n              className=\"form-control\"\n              id=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.currentTarget.value)}\n            />\n            {show_required_name ? (\n              <div className=\"text-danger\">*Name field is required</div>\n            ) : (\n              <></>\n            )}\n            <br />\n            Email Address\n            <br />\n            <input\n              type=\"input\"\n              className=\"form-control\"\n              id=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.currentTarget.value)}\n            />\n            {show_required_email ? (\n              <div className=\"text-danger\">*Valid email is required</div>\n            ) : (\n              <></>\n            )}\n            <br />\n            Password <br />\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.currentTarget.value)}\n            />\n            {show_required_password ? (\n              <div className=\"text-danger\">*Password field is required</div>\n            ) : (\n              <></>\n            )}\n            <br />\n            <button\n              type=\"submit\"\n              className=\"btn-primary\"\n              onClick={handleCreate}\n            >\n              Create Account\n            </button>\n          </>\n        ) : (\n          <>\n            <h5>Success</h5>\n            <button type=\"submit\" className=\"btn-primary\" onClick={clearForm}>\n              Add another account\n            </button>\n          </>\n        )\n      }\n    />\n  );\n};\nexport default CreateAccount;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Home from \"./home\";\nimport Login from \"./login\";\nimport Deposit from \"./deposit\";\nimport Withdraw from \"./withdraw\";\nimport Balance from \"./balance\";\nimport AllData from \"./alldata\";\nimport NavBar from \"./navbar\";\nimport CreateAccount from \"./createaccount\";\nimport { UserContext, HashRouter, Route } from \"./context\";\n\nconst Spa = () => {\n  const [status, setContext] = useState({ users: [], current_user: undefined });\n  return (\n    <HashRouter>\n      <div>\n        <NavBar />\n        <UserContext.Provider value={{ status, setContext }}>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/createaccount/\" component={CreateAccount} />\n          <Route path=\"/login/\" component={Login} />\n          <Route path=\"/deposit/\" component={Deposit} />\n          <Route path=\"/withdraw/\" component={Withdraw} />\n          <Route path=\"/balance/\" component={Balance} />\n          <Route path=\"/alldata/\" component={AllData} />\n        </UserContext.Provider>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Spa;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport Spa from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Spa />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}